rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // âœ… Utility: Check admin
    function isAdmin() {
      return request.auth != null && (
        request.auth.uid == "Z5JX1bsEEnfoh0v12Jz1XSl1FEC3" || // your hard-coded admin UID
        (request.auth.token != null && request.auth.token.admin == true)
      );
    }

    // --- Students Collection ---
    match /users/{userId} {
      // Admin full access to all students (must be first for priority)
      allow read, write: if isAdmin();
      
      // Student creates their own profile
      allow create: if request.auth != null && request.auth.uid == userId;

      // Student reads/updates only their own doc
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow updates by the owner with basic field protection
      allow update: if request.auth != null
                && request.auth.uid == userId
                && (
                  // hallTicket cannot be changed after being set
                  !request.resource.data.keys().hasAny(['hallTicket']) || 
                  !resource.data.keys().hasAny(['hallTicket']) || 
                  request.resource.data.hallTicket == resource.data.hallTicket
                )
                && (
                  // role cannot be changed
                  !request.resource.data.keys().hasAny(['role']) || 
                  !resource.data.keys().hasAny(['role']) || 
                  request.resource.data.role == resource.data.role
                )
                && (
                  // academicYear can be set initially or kept the same
                  !request.resource.data.keys().hasAny(['academicYear']) ||
                  !resource.data.keys().hasAny(['academicYear']) ||
                  request.resource.data.academicYear == resource.data.academicYear
                );
    }

    // --- Buses Collection ---
    match /buses/{busId} {
      allow read: if request.auth != null; // all signed-in users can read
      allow write: if isAdmin();           // only admin can add/edit/delete
    }

    // --- Stages Collection ---
    match /stages/{stageId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- Payments Collection ---
    match /payments/{paymentId} {
      // Admin full access (must be first for priority)
      allow read, write, delete: if isAdmin();
      
      // Students create their own payment doc
      allow create: if request.auth != null
                    && request.auth.uid == request.resource.data.studentId;

      // Student can read their own
      allow read: if request.auth != null && request.auth.uid == resource.data.studentId;

      // Allow updates for payment processing (system updates status)
      // Students can update their own payments (for status changes)
      allow update: if request.auth != null && request.auth.uid == resource.data.studentId;
    }

    // --- Passes Collection ---
    match /passes/{passId} {
      // Admin manages issuing/expiring passes (must be first for priority)
      allow read, write, delete: if isAdmin();
      
      // Student can read only their own pass
      allow read: if request.auth != null && request.auth.uid == passId;

      // Allow students to create/update their own pass (for payment system)
      allow create, update: if request.auth != null && request.auth.uid == passId;
    }

    // --- Settings (Academic Year) ---
    match /settings/{docId} {
     allow read: if request.auth != null;
     allow write: if isAdmin();
    }
    
    // --- Receipt Counters ---
    match /receiptCounters/{yearId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // --- Default deny ---
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
